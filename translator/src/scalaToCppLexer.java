// Generated from /Users/reczkok/Kompilatory/compilers/scalaToCpp.g4 by ANTLR 4.12.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class scalaToCppLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		CLASS=1, OBJECT=2, TRAIT=3, DEF=4, NEW=5, LPAREN=6, RPAREN=7, LBRACE=8, 
		RBRACE=9, COMMA=10, DOT=11, EQ=12, SEMICOLON=13, COLON=14, IF=15, ELSE=16, 
		WHILE=17, FOR=18, RETURN=19, VAR=20, VAL=21, ARROW=22, EQEQ=23, NEQ=24, 
		LT=25, GT=26, LTEQ=27, GTEQ=28, PRO=29, AND=30, OR=31, PLUS=32, MINUS=33, 
		ASTERISK=34, SLASH=35, BANG=36, LIST=37, BOOLEAN_LITERAL=38, INT_LITERAL=39, 
		STRING_LITERAL=40, IDENTIFIER=41, WS=42;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"CLASS", "OBJECT", "TRAIT", "DEF", "NEW", "LPAREN", "RPAREN", "LBRACE", 
			"RBRACE", "COMMA", "DOT", "EQ", "SEMICOLON", "COLON", "IF", "ELSE", "WHILE", 
			"FOR", "RETURN", "VAR", "VAL", "ARROW", "EQEQ", "NEQ", "LT", "GT", "LTEQ", 
			"GTEQ", "PRO", "AND", "OR", "PLUS", "MINUS", "ASTERISK", "SLASH", "BANG", 
			"LIST", "BOOLEAN_LITERAL", "INT_LITERAL", "STRING_LITERAL", "IDENTIFIER", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'class'", "'object'", "'trait'", "'def'", "'new'", "'('", "')'", 
			"'{'", "'}'", "','", "'.'", "'='", "';'", "':'", "'if'", "'else'", "'while'", 
			"'for'", "'return'", "'var'", "'val'", "'<-'", "'=='", "'!='", "'<'", 
			"'>'", "'<='", "'>='", "'%'", "'&&'", "'||'", "'+'", "'-'", "'*'", "'/'", 
			"'!'", "'List'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "CLASS", "OBJECT", "TRAIT", "DEF", "NEW", "LPAREN", "RPAREN", "LBRACE", 
			"RBRACE", "COMMA", "DOT", "EQ", "SEMICOLON", "COLON", "IF", "ELSE", "WHILE", 
			"FOR", "RETURN", "VAR", "VAL", "ARROW", "EQEQ", "NEQ", "LT", "GT", "LTEQ", 
			"GTEQ", "PRO", "AND", "OR", "PLUS", "MINUS", "ASTERISK", "SLASH", "BANG", 
			"LIST", "BOOLEAN_LITERAL", "INT_LITERAL", "STRING_LITERAL", "IDENTIFIER", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public scalaToCppLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "scalaToCpp.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000*\u00f4\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001"+
		" \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001"+
		"$\u0001$\u0001$\u0001%\u0001%\u0001%\u0001%\u0001%\u0001%\u0001%\u0001"+
		"%\u0001%\u0003%\u00d7\b%\u0001&\u0004&\u00da\b&\u000b&\f&\u00db\u0001"+
		"\'\u0001\'\u0005\'\u00e0\b\'\n\'\f\'\u00e3\t\'\u0001\'\u0001\'\u0001("+
		"\u0001(\u0005(\u00e9\b(\n(\f(\u00ec\t(\u0001)\u0004)\u00ef\b)\u000b)\f"+
		")\u00f0\u0001)\u0001)\u0000\u0000*\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c"+
		"9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\'O(Q)S*\u0001\u0000\u0005\u0001"+
		"\u000009\u0001\u0000\"\"\u0002\u0000AZaz\u0003\u000009AZaz\u0003\u0000"+
		"\t\n\r\r  \u00f8\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001"+
		"\u0000\u0000\u0000\u0001U\u0001\u0000\u0000\u0000\u0003[\u0001\u0000\u0000"+
		"\u0000\u0005b\u0001\u0000\u0000\u0000\u0007h\u0001\u0000\u0000\u0000\t"+
		"l\u0001\u0000\u0000\u0000\u000bp\u0001\u0000\u0000\u0000\rr\u0001\u0000"+
		"\u0000\u0000\u000ft\u0001\u0000\u0000\u0000\u0011v\u0001\u0000\u0000\u0000"+
		"\u0013x\u0001\u0000\u0000\u0000\u0015z\u0001\u0000\u0000\u0000\u0017|"+
		"\u0001\u0000\u0000\u0000\u0019~\u0001\u0000\u0000\u0000\u001b\u0080\u0001"+
		"\u0000\u0000\u0000\u001d\u0082\u0001\u0000\u0000\u0000\u001f\u0085\u0001"+
		"\u0000\u0000\u0000!\u008a\u0001\u0000\u0000\u0000#\u0090\u0001\u0000\u0000"+
		"\u0000%\u0094\u0001\u0000\u0000\u0000\'\u009b\u0001\u0000\u0000\u0000"+
		")\u009f\u0001\u0000\u0000\u0000+\u00a3\u0001\u0000\u0000\u0000-\u00a6"+
		"\u0001\u0000\u0000\u0000/\u00a9\u0001\u0000\u0000\u00001\u00ac\u0001\u0000"+
		"\u0000\u00003\u00ae\u0001\u0000\u0000\u00005\u00b0\u0001\u0000\u0000\u0000"+
		"7\u00b3\u0001\u0000\u0000\u00009\u00b6\u0001\u0000\u0000\u0000;\u00b8"+
		"\u0001\u0000\u0000\u0000=\u00bb\u0001\u0000\u0000\u0000?\u00be\u0001\u0000"+
		"\u0000\u0000A\u00c0\u0001\u0000\u0000\u0000C\u00c2\u0001\u0000\u0000\u0000"+
		"E\u00c4\u0001\u0000\u0000\u0000G\u00c6\u0001\u0000\u0000\u0000I\u00c8"+
		"\u0001\u0000\u0000\u0000K\u00d6\u0001\u0000\u0000\u0000M\u00d9\u0001\u0000"+
		"\u0000\u0000O\u00dd\u0001\u0000\u0000\u0000Q\u00e6\u0001\u0000\u0000\u0000"+
		"S\u00ee\u0001\u0000\u0000\u0000UV\u0005c\u0000\u0000VW\u0005l\u0000\u0000"+
		"WX\u0005a\u0000\u0000XY\u0005s\u0000\u0000YZ\u0005s\u0000\u0000Z\u0002"+
		"\u0001\u0000\u0000\u0000[\\\u0005o\u0000\u0000\\]\u0005b\u0000\u0000]"+
		"^\u0005j\u0000\u0000^_\u0005e\u0000\u0000_`\u0005c\u0000\u0000`a\u0005"+
		"t\u0000\u0000a\u0004\u0001\u0000\u0000\u0000bc\u0005t\u0000\u0000cd\u0005"+
		"r\u0000\u0000de\u0005a\u0000\u0000ef\u0005i\u0000\u0000fg\u0005t\u0000"+
		"\u0000g\u0006\u0001\u0000\u0000\u0000hi\u0005d\u0000\u0000ij\u0005e\u0000"+
		"\u0000jk\u0005f\u0000\u0000k\b\u0001\u0000\u0000\u0000lm\u0005n\u0000"+
		"\u0000mn\u0005e\u0000\u0000no\u0005w\u0000\u0000o\n\u0001\u0000\u0000"+
		"\u0000pq\u0005(\u0000\u0000q\f\u0001\u0000\u0000\u0000rs\u0005)\u0000"+
		"\u0000s\u000e\u0001\u0000\u0000\u0000tu\u0005{\u0000\u0000u\u0010\u0001"+
		"\u0000\u0000\u0000vw\u0005}\u0000\u0000w\u0012\u0001\u0000\u0000\u0000"+
		"xy\u0005,\u0000\u0000y\u0014\u0001\u0000\u0000\u0000z{\u0005.\u0000\u0000"+
		"{\u0016\u0001\u0000\u0000\u0000|}\u0005=\u0000\u0000}\u0018\u0001\u0000"+
		"\u0000\u0000~\u007f\u0005;\u0000\u0000\u007f\u001a\u0001\u0000\u0000\u0000"+
		"\u0080\u0081\u0005:\u0000\u0000\u0081\u001c\u0001\u0000\u0000\u0000\u0082"+
		"\u0083\u0005i\u0000\u0000\u0083\u0084\u0005f\u0000\u0000\u0084\u001e\u0001"+
		"\u0000\u0000\u0000\u0085\u0086\u0005e\u0000\u0000\u0086\u0087\u0005l\u0000"+
		"\u0000\u0087\u0088\u0005s\u0000\u0000\u0088\u0089\u0005e\u0000\u0000\u0089"+
		" \u0001\u0000\u0000\u0000\u008a\u008b\u0005w\u0000\u0000\u008b\u008c\u0005"+
		"h\u0000\u0000\u008c\u008d\u0005i\u0000\u0000\u008d\u008e\u0005l\u0000"+
		"\u0000\u008e\u008f\u0005e\u0000\u0000\u008f\"\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0005f\u0000\u0000\u0091\u0092\u0005o\u0000\u0000\u0092\u0093"+
		"\u0005r\u0000\u0000\u0093$\u0001\u0000\u0000\u0000\u0094\u0095\u0005r"+
		"\u0000\u0000\u0095\u0096\u0005e\u0000\u0000\u0096\u0097\u0005t\u0000\u0000"+
		"\u0097\u0098\u0005u\u0000\u0000\u0098\u0099\u0005r\u0000\u0000\u0099\u009a"+
		"\u0005n\u0000\u0000\u009a&\u0001\u0000\u0000\u0000\u009b\u009c\u0005v"+
		"\u0000\u0000\u009c\u009d\u0005a\u0000\u0000\u009d\u009e\u0005r\u0000\u0000"+
		"\u009e(\u0001\u0000\u0000\u0000\u009f\u00a0\u0005v\u0000\u0000\u00a0\u00a1"+
		"\u0005a\u0000\u0000\u00a1\u00a2\u0005l\u0000\u0000\u00a2*\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0005<\u0000\u0000\u00a4\u00a5\u0005-\u0000\u0000"+
		"\u00a5,\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005=\u0000\u0000\u00a7\u00a8"+
		"\u0005=\u0000\u0000\u00a8.\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005!"+
		"\u0000\u0000\u00aa\u00ab\u0005=\u0000\u0000\u00ab0\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0005<\u0000\u0000\u00ad2\u0001\u0000\u0000\u0000\u00ae\u00af"+
		"\u0005>\u0000\u0000\u00af4\u0001\u0000\u0000\u0000\u00b0\u00b1\u0005<"+
		"\u0000\u0000\u00b1\u00b2\u0005=\u0000\u0000\u00b26\u0001\u0000\u0000\u0000"+
		"\u00b3\u00b4\u0005>\u0000\u0000\u00b4\u00b5\u0005=\u0000\u0000\u00b58"+
		"\u0001\u0000\u0000\u0000\u00b6\u00b7\u0005%\u0000\u0000\u00b7:\u0001\u0000"+
		"\u0000\u0000\u00b8\u00b9\u0005&\u0000\u0000\u00b9\u00ba\u0005&\u0000\u0000"+
		"\u00ba<\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005|\u0000\u0000\u00bc\u00bd"+
		"\u0005|\u0000\u0000\u00bd>\u0001\u0000\u0000\u0000\u00be\u00bf\u0005+"+
		"\u0000\u0000\u00bf@\u0001\u0000\u0000\u0000\u00c0\u00c1\u0005-\u0000\u0000"+
		"\u00c1B\u0001\u0000\u0000\u0000\u00c2\u00c3\u0005*\u0000\u0000\u00c3D"+
		"\u0001\u0000\u0000\u0000\u00c4\u00c5\u0005/\u0000\u0000\u00c5F\u0001\u0000"+
		"\u0000\u0000\u00c6\u00c7\u0005!\u0000\u0000\u00c7H\u0001\u0000\u0000\u0000"+
		"\u00c8\u00c9\u0005L\u0000\u0000\u00c9\u00ca\u0005i\u0000\u0000\u00ca\u00cb"+
		"\u0005s\u0000\u0000\u00cb\u00cc\u0005t\u0000\u0000\u00ccJ\u0001\u0000"+
		"\u0000\u0000\u00cd\u00ce\u0005t\u0000\u0000\u00ce\u00cf\u0005r\u0000\u0000"+
		"\u00cf\u00d0\u0005u\u0000\u0000\u00d0\u00d7\u0005e\u0000\u0000\u00d1\u00d2"+
		"\u0005f\u0000\u0000\u00d2\u00d3\u0005a\u0000\u0000\u00d3\u00d4\u0005l"+
		"\u0000\u0000\u00d4\u00d5\u0005s\u0000\u0000\u00d5\u00d7\u0005e\u0000\u0000"+
		"\u00d6\u00cd\u0001\u0000\u0000\u0000\u00d6\u00d1\u0001\u0000\u0000\u0000"+
		"\u00d7L\u0001\u0000\u0000\u0000\u00d8\u00da\u0007\u0000\u0000\u0000\u00d9"+
		"\u00d8\u0001\u0000\u0000\u0000\u00da\u00db\u0001\u0000\u0000\u0000\u00db"+
		"\u00d9\u0001\u0000\u0000\u0000\u00db\u00dc\u0001\u0000\u0000\u0000\u00dc"+
		"N\u0001\u0000\u0000\u0000\u00dd\u00e1\u0005\"\u0000\u0000\u00de\u00e0"+
		"\b\u0001\u0000\u0000\u00df\u00de\u0001\u0000\u0000\u0000\u00e0\u00e3\u0001"+
		"\u0000\u0000\u0000\u00e1\u00df\u0001\u0000\u0000\u0000\u00e1\u00e2\u0001"+
		"\u0000\u0000\u0000\u00e2\u00e4\u0001\u0000\u0000\u0000\u00e3\u00e1\u0001"+
		"\u0000\u0000\u0000\u00e4\u00e5\u0005\"\u0000\u0000\u00e5P\u0001\u0000"+
		"\u0000\u0000\u00e6\u00ea\u0007\u0002\u0000\u0000\u00e7\u00e9\u0007\u0003"+
		"\u0000\u0000\u00e8\u00e7\u0001\u0000\u0000\u0000\u00e9\u00ec\u0001\u0000"+
		"\u0000\u0000\u00ea\u00e8\u0001\u0000\u0000\u0000\u00ea\u00eb\u0001\u0000"+
		"\u0000\u0000\u00ebR\u0001\u0000\u0000\u0000\u00ec\u00ea\u0001\u0000\u0000"+
		"\u0000\u00ed\u00ef\u0007\u0004\u0000\u0000\u00ee\u00ed\u0001\u0000\u0000"+
		"\u0000\u00ef\u00f0\u0001\u0000\u0000\u0000\u00f0\u00ee\u0001\u0000\u0000"+
		"\u0000\u00f0\u00f1\u0001\u0000\u0000\u0000\u00f1\u00f2\u0001\u0000\u0000"+
		"\u0000\u00f2\u00f3\u0006)\u0000\u0000\u00f3T\u0001\u0000\u0000\u0000\u0006"+
		"\u0000\u00d6\u00db\u00e1\u00ea\u00f0\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}